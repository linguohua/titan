// Code generated by github.com/github.com/linguohua/titan/node/config/cfgdocgen. DO NOT EDIT.

package config

type DocField struct {
	Name    string
	Type    string
	Comment string
}

var Doc = map[string][]DocField{
	"CandidateCfg": []DocField{
		{
			Name: "TcpSrvAddr",
			Type: "string",

			Comment: ``,
		},
		{
			Name: "IpfsApiURL",
			Type: "string",

			Comment: ``,
		},
	},
	"EdgeCfg": []DocField{
		{
			Name: "ListenAddress",
			Type: "string",

			Comment: `host address and port the edge node api will listen on`,
		},
		{
			Name: "Timeout",
			Type: "string",

			Comment: `used when 'ListenAddress' is unspecified. must be a valid duration recognized by golang's time.ParseDuration function`,
		},
		{
			Name: "NodeID",
			Type: "string",

			Comment: `deivce id`,
		},
		{
			Name: "Secret",
			Type: "string",

			Comment: `used auth when connect to scheduler`,
		},
		{
			Name: "CarfileStorePath",
			Type: "string",

			Comment: `carfilestore path`,
		},
		{
			Name: "CarfileStoreType",
			Type: "string",

			Comment: `blockstore type`,
		},
		{
			Name: "BandwidthUp",
			Type: "int64",

			Comment: `upload file bandwidth, unit is B/s`,
		},
		{
			Name: "BandwidthDown",
			Type: "int64",

			Comment: `download file bandwidth, unit is B/s`,
		},
		{
			Name: "Locator",
			Type: "bool",

			Comment: `if true, get scheduler url from locator`,
		},
		{
			Name: "InsecureSkipVerify",
			Type: "bool",

			Comment: `InsecureSkipVerify skip tls verify`,
		},
		{
			Name: "CertificatePath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "PrivateKeyPath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "CaCertificatePath",
			Type: "string",

			Comment: `self sign certificate, use for client`,
		},
	},
	"LocatorCfg": []DocField{
		{
			Name: "ListenAddress",
			Type: "string",

			Comment: `host address and port the edge node api will listen on`,
		},
		{
			Name: "Timeout",
			Type: "string",

			Comment: `used when 'ListenAddress' is unspecified. must be a valid duration recognized by golang's time.ParseDuration function`,
		},
		{
			Name: "GeoDBPath",
			Type: "string",

			Comment: `geodb path`,
		},
		{
			Name: "DBAddrss",
			Type: "string",

			Comment: `mysql db addrss`,
		},
		{
			Name: "UUID",
			Type: "string",

			Comment: `uuid`,
		},
		{
			Name: "InsecureSkipVerify",
			Type: "bool",

			Comment: `InsecureSkipVerify skip tls verify`,
		},
		{
			Name: "CertificatePath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "PrivateKeyPath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "CaCertificatePath",
			Type: "string",

			Comment: `self sign certificate, use for client`,
		},
	},
	"SchedulerCfg": []DocField{
		{
			Name: "ListenAddress",
			Type: "string",

			Comment: `host address and port the edge node api will listen on`,
		},
		{
			Name: "RedisAddrss",
			Type: "string",

			Comment: `redis server address`,
		},
		{
			Name: "GeoDBPath",
			Type: "string",

			Comment: `geodb path`,
		},
		{
			Name: "DatabaseAddress",
			Type: "string",

			Comment: `mysql address`,
		},
		{
			Name: "AreaID",
			Type: "string",

			Comment: `area id`,
		},
		{
			Name: "InsecureSkipVerify",
			Type: "bool",

			Comment: `InsecureSkipVerify skip tls verify`,
		},
		{
			Name: "CertificatePath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "PrivateKeyPath",
			Type: "string",

			Comment: `used for http3 server
be used if InsecureSkipVerify is true`,
		},
		{
			Name: "CaCertificatePath",
			Type: "string",

			Comment: `self sign certificate, use for client`,
		},
	},
}
